(function(){window.garden={inlineEvents:Example({code:'model =\n  hello: ->\n    alert "hello"',template:"%button(click=@hello) Hello!",header:"Inline Events",description:"Set up a click handler. Referenced it as the value of the button 'click' attribute.",selector:"#inline-events"}),dependentFunctions:Example({code:'model =\n  name: ->\n    @first() + \' \' + @last()\n  first: Observable "Prince"\n  last: Observable "Hamlet"',template:"%h2= @name\n%input(value=@first)\n%input(value=@last)",header:"Dependent Functions",description:"Functions declared that reference Observables will automatically be updated when any of the dependencies are changed.",selector:"#dependent-functions"}),checkbox:Example({code:"model =\n  checked: Observable true",template:'%label\n  %input(type="checkbox" @checked)\n  = @checked',header:"Checkbox",description:"Toggles a Boolean Observable. If the backing model property is named the same as the DOM attr, you can omit the attr in your template. Note: Clicking the label triggers the change one the input. Don't set a click handler for the label or things will get weird.",selector:"#checkbox"}),disable:Example({code:'model =\n  hello: ->\n    alert "hello"\n  disabled: Observable true\n  toggle: ->\n    @disabled.toggle()',template:"%button(click=@hello @disabled) A Button\n%button(click=@toggle) Toggle",header:"Disable Inputs",description:"Use Observable#toggle to flip a Boolean Observable.",selector:"#disable"}),html:Example({code:'model =\n  item: (text) ->\n    $("<li>", text: text).get(0)',template:'%ul\n  = @item("Hey")\n  = @item("There")\n  = @item("Dude")',header:"HTML elements",description:"Hamlet won't insert unescaped HTML into a page by itself. A workaround if you really want unsafe HTML content is to create a document fragment or use the `get` method on a jQuery element.",selector:"#disable"}),flights:Example({code:'model =\n  tickets: [\n    {name: "Choose...", price: ""}\n    {name: "Economy", price: 199.95}\n    {name: "Business", price: 449.22}\n    {name: "First Class", price: 1199.99}\n  ]\n  chosenTicket: Observable()\n  reset: ->\n    @chosenTicket(@tickets[0])\n  disabled: ->\n    @chosenTicket() is @tickets[0] or !@chosenTicket()?',template:"%select(value=@chosenTicket options=@tickets)\n%button(@disabled click=@reset) Clear\n.choice\n  - each @chosenTicket, ->\n    .ticket\n      - if @price\n        You have chosen!\n        %b= @name\n        = @price",header:"Knockout style flight purchase widget",description:"Build a simple flight selector, taking advantage of the simplicity of working with select boxes in Hamlet.",selector:"#flights"})}}).call(this);